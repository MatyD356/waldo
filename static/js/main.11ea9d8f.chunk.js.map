{"version":3,"sources":["components/Circle.js","Firebase.js","components/GameControls.js","components/WinInfo.js","components/GameInfo.js","components/PhotoContainer.js","components/Navigation.js","components/CharacterList.js","components/AsideMenu.js","App.js","serviceWorker.js","index.js"],"names":["Circle","cords","main","name","useEffect","x","y","document","documentElement","style","setProperty","prevCords","getStyle","element","querySelector","getComputedStyle","parseInt","left","top","className","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","logInAnnonymusly","signInAnonymously","catch","error","console","log","db","storageRef","ref","GameControls","imgName","updateCharacters","gameOn","updateGameOn","loadImage","setImgName","color","onClick","callback","collectionName","child","getDownloadURL","then","url","code","getPicture","collection","doc","get","exists","data","WinInfo","time","useState","scores","setScores","setName","scoreSaved","setScoreSaved","sendName","imgScores","set","updatedDoc","sort","a","b","minutes","seconds","addScore","type","onChange","e","target","value","placeholder","length","map","item","index","key","GameInfo","setHowTo","PhotoContainer","win","setWin","characters","currentImg","howTo","lastClick","setLastClick","hit","JSON","stringify","filter","newX","nativeEvent","offsetX","newY","offsetY","src","alt","Navigation","reset","CharacterList","img","AsideMenu","setTime","interval","setInterval","clearInterval","App","setCharacters","setcurrentImg","setGameOn","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.11ea9d8f.chunk.js","sourcesContent":["import React, { useEffect } from 'react'\nimport '../styles/Circle.scss'\n\nconst Circle = ({ cords, main, name }) => {\n  useEffect(() => {\n    if (cords.x > 50 || cords.y > 50) {\n      document.documentElement.style.setProperty(`--${name ? name : ''}x`, cords.x - 25 + 'px')\n      document.documentElement.style.setProperty(`--${name ? name : ''}y`, cords.y - 25 + 'px')\n    } else if (main) {\n      //allowing user to click within circle and change it's position\n      const prevCords = getStyle()\n      document.documentElement.style.setProperty('--x', prevCords.x + cords.x - 25 + 'px')\n      document.documentElement.style.setProperty('--y', prevCords.y + cords.y - 25 + 'px')\n    }\n  })\n  const getStyle = () => {\n    const element = document.querySelector('.Circle')\n    const style = getComputedStyle(element)\n    const left = parseInt(style.left, 10)\n    const top = parseInt(style.top, 10)\n    return { x: left, y: top }\n  }\n  return (\n    <div className={`Circle ${name ? name : ''}`} />\n  )\n}\nexport default Circle","import * as firebase from 'firebase/app'\nimport 'firebase/firebase-firestore'\nimport 'firebase/firebase-auth'\nimport 'firebase/firebase-storage'\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAs1EKjtjjAWXZVhCRPGBKK7gnbxAAdaY4\",\n  authDomain: \"waldo-12be8.firebaseapp.com\",\n  databaseURL: \"https://waldo-12be8.firebaseio.com\",\n  projectId: \"waldo-12be8\",\n  storageBucket: \"waldo-12be8.appspot.com\",\n  messagingSenderId: \"464683515854\",\n  appId: \"1:464683515854:web:a656911e30c6f158c7f59f\"\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\n/* AUTH */\nconst logInAnnonymusly = () => {\n  firebase.auth().signInAnonymously().catch(function (error) {\n    if (error) {\n      console.log(error);\n    }\n  });\n}\n\n/*FIRESTORE*/\n\n// Initialize FireStore\nconst db = firebase.firestore();\n\n//Getting characterInfo\nexport const getCharacters = (callback, collectionName) => {\n  logInAnnonymusly();\n  const imgOneCharacters = db.collection(collectionName).doc('characters')\n  imgOneCharacters.get().then(doc => {\n    if (doc.exists) {\n      const data = doc.data().cords\n      callback(data)\n    } else {\n      console.log(\"No such document!\");\n    }\n  }).catch(function (error) {\n    console.log(\"Error getting document:\", error);\n  });\n\n}\n\nexport const addScore = (callback, name, time, collectionName) => {\n  logInAnnonymusly();\n  const imgScores = db.collection(collectionName).doc('scores')\n  imgScores.get().then(doc => {\n    if (doc.exists) {\n      const data = doc.data().scores\n      db.collection(collectionName).doc('scores').set({\n        scores: [...data, {\n          name,\n          time\n        }]\n      })\n      imgScores.get().then(updatedDoc => {\n        callback(updatedDoc.data().scores\n          .sort((a, b) => (a.time.minutes * 60 + a.time.seconds) - (b.time.minutes * 60 + b.time.seconds)))\n      })\n      return data\n    } else {\n      console.log(\"No such document!\");\n    }\n  }).catch(function (error) {\n    console.log(\"Error getting document:\", error);\n  });\n}\nexport const getScores = (callback, collectionName) => {\n  logInAnnonymusly();\n  const imgScores = db.collection(collectionName).doc('scores')\n  imgScores.get().then(doc => {\n    if (doc.exists) {\n      const data = doc.data().scores\n      console.log(data);\n      callback(data)\n    } else {\n      console.log(\"No such document!\");\n    }\n  }).catch(function (error) {\n    console.log(\"Error getting document:\", error);\n  });\n\n}\n\n/* STORAGE */\n// Get a reference to the storage service, which is used to create references in your storage bucket\nvar storage = firebase.storage();\n// Create a storage reference from our storage service\nvar storageRef = storage.ref();\n// Get the download URL\nexport const getPicture = (callback, imgName) => {\n  const starsRef = storageRef.child(`images/${imgName}`);\n  starsRef.getDownloadURL().then((url) => {\n    callback(url)\n  }).catch(function (error) {\n    switch (error.code) {\n      case 'storage/object-not-found':\n        // File doesn't exist\n        break;\n\n      case 'storage/unauthorized':\n        // User doesn't have permission to access the object\n        break;\n\n      case 'storage/canceled':\n        // User canceled the upload\n        break;\n\n      case 'storage/unknown':\n        // Unknown error occurred, inspect the server response\n        break;\n      default:\n        break;\n    }\n  });\n}","import React from 'react'\nimport { getPicture, getCharacters } from '../Firebase'\n\nconst GameControls = ({ imgName, updateCharacters, gameOn, updateGameOn, loadImage, setImgName }) => {\n  const color = imgName === 'picture-one' ? 'red' : 'yellow'\n  return (\n    <div className={`game-controls ${color}`}>\n      <button className='control-button'\n        onClick={() => {\n          setImgName(imgName)\n          getPicture(loadImage, `${imgName}-min.png`)\n          getCharacters(updateCharacters, `${imgName}`)\n          updateGameOn(!gameOn)\n        }}>Start\n            </button>\n    </div>\n  )\n}\n\nexport default GameControls","import React, { useState } from 'react'\nimport { addScore } from '../Firebase'\nimport '../styles/WinInfo.scss'\n\nconst WinInfo = ({ time, imgName }) => {\n  const [scores, setScores] = useState([])\n  const [name, setName] = useState('')\n  const [scoreSaved, setScoreSaved] = useState(false)\n\n  const saveName = (e) => {\n    setName(e.target.value)\n  }\n  const sendName = () => {\n    addScore(setScores, name, time, imgName)\n  }\n  return (\n    <div className=\"win-alert\">\n      {!scoreSaved ? <div className='win-alert-buttons'>\n        <h2 className='win-alert-title'>Nice job</h2>\n        <input type='text' onChange={saveName} className='win-alert-input' placeholder='Name' />\n        <button className='win-alert-button'\n          onClick={() => {\n            sendName()\n            setScoreSaved(true)\n          }}>Save score</button>\n      </div> : null}\n      {scoreSaved ? <div className='win-alert-scores'>\n        <h2 className='win-alert-title'>Scores</h2>\n        <ul className='win-alert-list'>\n          {scores.length > 0 ? scores.map((item, index) =>\n            <li className='win-alert-list-item' key={index}>\n              <p>Name: {item.name}</p>\n              <p>\n                Time: {item.time.minutes < 10 ? `0${item.time.minutes}` : item.time.minutes}:\n                {item.time.seconds < 10 ? `0${item.time.seconds}` : item.time.seconds}\n              </p>\n            </li>) : null}\n        </ul>\n      </div> : null}\n    </div>\n  )\n}\n\nexport default WinInfo","import React from 'react'\n\nimport '../styles/GameInfo.scss'\n\nconst GameInfo = ({ setHowTo }) => {\n\n  return (\n    <div className='GameInfo'>\n      <h2 className='GameInfo-title'>How to play this game</h2>\n      <ul className='GameInfo-list'>\n        <li className='GameInfo-list-item'>1. Chose a photo to play</li>\n        <li className='GameInfo-list-item'>2. Check out characters that u will need to find (they will appear on left)</li>\n        <li className='GameInfo-list-item'>3. Try to find all characters hidden in you'r photo</li>\n        <li className='GameInfo-list-item'>4. The game will count your time so make it as fast as u can</li>\n        <li className='GameInfo-list-item'>5. After u finish write your name and save your score</li>\n        <li className='GameInfo-list-item'>6. Congrats u found Waldo (u can try to beat your score)</li>\n      </ul>\n      <button onClick={() => setHowTo(false)} className='GameInfo-button'>Got it</button>\n    </div>\n  )\n}\n\nexport default GameInfo","import React, { useState, useEffect } from 'react'\nimport '../styles/PhotoContainer.scss'\nimport Circle from './Circle'\nimport GameControls from './GameControls'\nimport WinInfo from './WinInfo'\nimport GameInfo from './GameInfo'\n\nconst PhotoContainer = ({ win, setWin, characters, updateCharacters, gameOn, updateGameOn, currentImg, loadImage, time, setHowTo, howTo }) => {\n\n  const [lastClick, setLastClick] = useState({ x: -1000, y: -1000 })\n  const [imgName, setImgName] = useState('');\n\n\n  //change characters hit if lastClick was near\n  useEffect(() => {\n    updateCharacters(\n      characters.map(item => {\n        if (item.x < lastClick.x + 25 && item.x > lastClick.x - 25\n          && item.y < lastClick.y + 25 && item.y > lastClick.y - 25) {\n          item.hit = true\n          return item\n        }\n        return item\n      })\n    )// eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [JSON.stringify(characters), lastClick.x, lastClick.y])\n\n  //check if user found all characters\n  useEffect(() => {\n    if (characters.length > 1) {\n      let hits = characters.filter(item => item.hit === true)\n      if (hits.length === characters.length) {\n        setWin(true)\n      }\n    }// eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [JSON.stringify(characters)])\n\n  const handleClick = (e) => {\n    let newX = e.nativeEvent.offsetX\n    let newY = e.nativeEvent.offsetY\n    setLastClick({ x: newX, y: newY })\n  }\n  return (\n    <div className='PhotoContainer'>\n      {howTo ? <GameInfo setHowTo={setHowTo} /> : !gameOn ? <div className='game-controls-container'>\n        <GameControls\n          setImgName={setImgName}\n          imgName='picture-one'\n          loadImage={loadImage}\n          gameOn={gameOn}\n          updateGameOn={updateGameOn}\n          updateCharacters={updateCharacters}\n        />\n        <GameControls\n          setImgName={setImgName}\n          imgName='picture-two'\n          loadImage={loadImage}\n          gameOn={gameOn}\n          updateGameOn={updateGameOn}\n          updateCharacters={updateCharacters}\n        />\n      </div> :\n        <img\n          onClick={handleClick}\n          className='waldoPhoto'\n          src={`${currentImg}`}\n          alt='waldo one'\n        />}\n\n      {characters ? characters.map((item, index) => {\n        if (item.hit && !win) {\n          return <Circle\n            key={index}\n            cords={{ x: item.x, y: item.y }}\n            main={false}\n            name={item.name} />\n        } else {\n          return null\n        }\n      }) : null}\n      {lastClick ? <Circle\n        cords={lastClick}\n        main={true} /> : null\n      }\n      {win ? <WinInfo imgName={imgName} time={time} /> : null}\n    </div>\n  )\n}\nexport default PhotoContainer","import React from 'react'\n\nconst Navigation = ({ reset, setHowTo }) => {\n\n  return (<nav>\n    <ul className='nav-list'>\n      <li className='nav-item' onClick={() => reset()}>Home</li>\n      <li className='nav-item' onClick={() => setHowTo(true)}>How to play?</li>\n    </ul>\n  </nav>)\n}\nexport default Navigation","import React from 'react'\n\nconst CharacterList = ({ characters }) => {\n  return (\n    <ul className='character-list'>\n      {characters.map(item => <li className='character-item' key={item.x}>\n        <img alt='' className='avatar' src={item.img} />\n        <span className={item.hit === false ? 'red' : 'green'}>{item.name}</span>\n      </li>)}\n    </ul >\n  )\n}\nexport default CharacterList","import React, { useEffect } from 'react'\nimport Navigation from './Navigation'\nimport CharacterList from './CharacterList'\n\nimport '../styles/AsideMenu.scss'\n\nconst AsideMenu = ({ win, characters, gameOn, currentImg, time, setTime, reset, setHowTo }) => {\n\n  useEffect(() => {\n    if (gameOn && !win) {\n      const interval = setInterval(() => {\n        if (time.seconds === 59) {\n          setTime(time => {\n            return {\n              minutes: time.minutes + 1,\n              seconds: 0\n            }\n          })\n        } else {\n          setTime(time => {\n            return {\n              minutes: time.minutes,\n              seconds: time.seconds + 1\n            }\n          })\n        }\n      }, 1000)\n      return () => clearInterval(interval)\n    }\n  }, [gameOn, win, setTime, time.seconds])\n\n  return (\n    <aside className='AsideMenu'>\n      <h1 className='title'>Where's Waldo</h1>\n      <Navigation reset={reset} setHowTo={setHowTo} />\n      {!currentImg ? <h2 className='sub-title'>Choose a picture</h2> :\n        <CharacterList characters={characters} />}\n      <div>\n        <h2 className='sub-title'>Find Waldo and his friends</h2>\n        <h2>Your time</h2>\n        <p>\n          {time.minutes < 10 ? `0${time.minutes}` : time.minutes}:\n          {time.seconds < 10 ? `0${time.seconds}` : time.seconds}\n        </p>\n      </div>\n    </aside >\n  )\n}\n\nexport default AsideMenu","import React, { useState } from 'react';\nimport './App.scss';\n\n\nimport PhotoContainer from './components/PhotoContainer'\nimport AsideMenu from './components/AsideMenu'\n\nfunction App() {\n  const [characters, setCharacters] = useState([])\n  const [currentImg, setcurrentImg] = useState('')\n  const [gameOn, setGameOn] = useState(false)\n  const [win, setWin] = useState(false)\n  const [howTo, setHowTo] = useState(false)\n  const [time, setTime] = useState({ minutes: 0, seconds: 0 })\n\n  const reset = () => {\n    setHowTo(false)\n    setCharacters([])\n    setcurrentImg('')\n    setGameOn(false)\n    setWin(false)\n    setTime({ minutes: 0, seconds: 0 })\n  }\n  return (\n    <div className=\"App\">\n      <AsideMenu\n        setHowTo={setHowTo}\n        reset={reset}\n        win={win}\n        characters={characters}\n        currentImg={currentImg}\n        time={time}\n        setTime={setTime}\n        gameOn={gameOn} />\n      <main>\n        <PhotoContainer\n          setHowTo={setHowTo}\n          howTo={howTo}\n          win={win}\n          time={time}\n          setTime={setTime}\n          setWin={setWin}\n          currentImg={currentImg}\n          loadImage={setcurrentImg}\n          characters={characters}\n          updateCharacters={setCharacters}\n          gameOn={gameOn}\n          updateGameOn={setGameOn}\n        />\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}